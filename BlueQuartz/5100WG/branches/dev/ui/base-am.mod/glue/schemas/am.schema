<!-- 
  This file describes the schema of the following class types:
    ActiveMonitor
  
  These class definitions are predefined by Cobalt, and should not be
  extended without Cobalt's permission.  To add application-specific
  properties to an object, consider creating a new namespace.
  
  Copyright (c) 2001 Sun Microsystems, Inc.
-->

<!-- a monitored subsystem can be in one of four states -->
<typedef name="amstate" type="re" data="[NGYR]"/>

<!-- this is the main namespace for the ActiveMonitor -->
<class name="ActiveMonitor" namespace="" version="1.2">
  <property name="enabled" type="boolean" default="1" writeacl="ruleCapable(modifyActiveMonitor)"/>
  <property name="alertEmailList" type="scalar" writeacl="ruleCapable(modifyActiveMonitor)"/>
</class>

<!-- 	
  This is the template structure for ActiveMonitor items.  Everything that
  wants to be monitored needs a namespace on ActiveMonitor.  There are some
  required properties for it to be considered valid.  First, the schema
  structure.

  <class name="ActiveMonitor" 	namespace="CPU" 	version="1.0">
    <property name="enabled"    	type="boolean" 	default="1"/>
    <property name="monitor"		type="boolean" 	default="1"/>
    <property name="type"		type="scalar"	default=""/>
    <property name="typeData"		type="scalar"	default=""/>
    <property name="currentState" 	type="amstate" 	default="N"/>
    <property name="lastChange"   	type="uint"     default="0"/>
    <property name="lastRun"      	type="uint"     default="0"/>
    <property name="currentMessage" 	type="scalar" 	default=""/>
    <property name="nameTag"      	type="scalar"  	default="CPU"/>

    <property name="interval"		type="uint"	default="0"/>
    <property name="sysfault"		type="boolean"	default="0"/>
    <property name="aggMember"		type="boolean"	default="0"/>
    <property name="restart"		type="scalar"	default=""/>
    <property name="retries"		type="int"	default="1"/>
    <property name="greenMsg"		type="scalar"	default="greenMsg"/>
    <property name="yellowMsg"		type="scalar"	default="yellowMsg"/>
    <property name="redMsg"		type="scalar"	default="redMsg"/>
    <property name="URL"	     	type="scalar"  	default=""/>
    <property name="hideUI"		type="boolean"  default="0"/>
    <property name="UIGroup"		type="scalar"   default=""/>
  </class>

  The following properties are required:
  --------------------------------------
  enabled : denotes whether this service is enabled - you should keep this in
  	sync manually
  monitor : denotes whether this AM item is currently monitored
  type : one of TCP, UDP, UNIX, EXEC, or AGGREGATE
  typeData : depends on type
  	for TCP/UDP : a port number
	for UNIX : the path to a UNIX domain socket
	for EXEC : the path to an executable
	for AGGREGATE : a list of namespaces contained
  currentState : the current amstate value for this service
  lastChange : the timestamp of the last time this state changed
  lastRun : the timestamp of the last time this test was run
  currentMessage : the current message or i18n tag for display
  nameTag : the name or i18n tag to display in the UI

  The following properties are optional, depending on type:
  --------------------------------------------------------
  interval : seconds between runs of this test. This number is added
	to the lastRun timestamp to determine the next time to run the
	test. The test will be run in the scheduled ActiveMonitor job that
	occurs AFTER the interval+lastRun time. So if 'interval' = 600 
	(10 minutes), the test will be run in the next Active Monitor run. If
	'interval' = 1500 (25 minutes), the test will be run every 2nd Active
	Monitor job. To avoid race conditions, it is best to set the interval
	slightly LESS than a 15 minute interval.
	If 'interval' is not present, it is assumed to be 0.
  sysfault : indicates whether this namespace wants the hardware sysfault light
	to be turned on. The external AM script for a namespace must set 
	<namespace>.sysfault = 1 during the AM run. If any AM namespace has
	<namespace>.sysfault = 1 at the end of the AM run, swatch will turn the
	hardware sysfault light on. If no <namespace>.sysfault = 1, then
	swatch will turn off the hardware sysfault light.
  aggMember : for members of aggregates, this flag tells swatch to not run the
  	same test twice
  restart : for TCP, UDP, UNIX tests, specifies a commandline to be executed
  	if the service is detected to be down
  retries : for TCP, UDP, UNIX, specifies the number of test attempts to make
  greenMsg : for TCP, UDP, UNIX, AGGREGATE, specifies the currentMessage for
  	the GREEN state
  yellowMsg : for TCP, UDP, UNIX, AGGREGATE, specifies the currentMessage for
  	the YELLOW state
  redMsg : for TCP, UDP, UNIX, AGGREGATE, specifies the currentMessage for the
  	RED state
  URL : optional, the URL to the details page for the item
  hideUI : a flag which tells the UI to not show this item, useful for
  	aggMember items
  UIGroup : a string requesting a UI group, can be 'system' or 'service'

  Any other properties can be defined, if they are useful.  For EXEC type
  tests, all properties in the namespace will be exported as environment
  variables - useful for configurable threshholds.

-->

<!-- end of am.schema -->
