#genUsername
#syntax: genUsername: (yes|no)
#meaning: enable or disable the automatic username 
#	generation feature in the UI.  In some locales
#	(Japan, for example) the feature is made
#	useless because (1) there is a character
#	encoding other than ASCII in use; or
#	(2) names are not writen with the 
#	given name first and the family name
#	last (which is what the username generation
#	system expects).

genUsername: no

#sortNameRegex
#syntax: sortNameRegex: regular expression
#meaning: set a regular expression to limit the
#	range of characters allowed to be used
#	for the sortable name field.  This
#	expression limited to POSIX 1003.2
#	complient expressions.  On UNIX, 
#	see regex(7) for more information.
#	TIPS: Don't forget the case where
#	the user enters nothing.  wrap
#	your regex in ^ and $ to be sure
#	that the user enters only what you allow.

#sortNameRegex: ^(202(237|2[4-7][0-7]|3[0-5][0-7]|36[01]))*$
sortNameRegex: .*

#needSortName
#syntax: neesSortName: (yes|no)
#meaning: enable or disable the use of a seprate
#	field specificly for holding a 'sortable'
#	name.  This is useful for locales where
#	the language has a non-phoenetic alphabet
#	or an unusually large number of characters
#	(Japanese and Chinese, for example).
#	If enabled, when users are sorted by full
#	name they will actually be sorted by the
#	contents of this field.

needSortName: yes


