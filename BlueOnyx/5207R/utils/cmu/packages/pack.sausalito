#!/usr/bin/perl
# written by and re-written by Jeff Bilicki
# $Id: pack.sausalito 922 2003-07-17 15:22:40Z will $
# Copyright 2001 Cobalt Networks http://www.cobalt.com/


use File::Copy;
use Getopt::Std;

# PreDefined Vars
my $exclude = {
		CVS			=>	1,
		Makefile	=>	1,
		make		=>	1
};
my $locales = {
		en			=>	1,
		ja			=>	1,
		fr			=>	1,
		es			=>	1,
		de			=>	1
};

my $tmp = "/tmp/build";


getopts('gbp:o:f:h');
use vars qw($opt_g $opt_b $opt_p $opt_o $opt_f $opt_h);

printUsage() if ($opt_h);

my ($path,$name,$fargo);

($opt_p) ?
	($path = $opt_p) :
	(die "You must give a path (-p)\n");

$name = $opt_o if ($opt_o);
$fargo = $opt_f if($opt_f);
 
# Set up some define dirs
my $packList = $path.'/packing_list';
my $rpmsDir = $tmp.'/RPMS';
my $pkgInfoDir = $tmp.'/pkginfo';
my $localeDir = $pkgInfoDir.'/locale';
my $msgFmt = "/usr/bin/msgfmt";


check_pieces();
build_update();

sub build_update
# Build it!
{
    get_name(); 
    print "\nRunning\n";    

    copy_scripts($path);
    copy_rpms($path);
	buildLocale();

    # move over scripts directory
    if (-d "$path/scripts" ) {
		mkdir("$tmp/scripts", 0755);
		copy_scripts("$path/scripts", 'scripts');
    }

    # move over misc directory
    if (-d "$path/misc") {
		mkdir("$tmp/misc", 0755);
		copy_scripts("$path/misc", 'misc');
    }

    # move over pkginfo directory
    if (-d "$path/pkginfo") {
		mkdir("$tmp/pkginfo", 0755);
		copy_scripts("$path/pkginfo", 'pkginfo');
    }
	# move over the patches directory
    if (-d "$path/patches") {
		mkdir("$tmp/patches", 0755);
		copy_scripts("$path/patches", 'patches');
    }
	
    print "Package: $name\n";
    # Build the Tar
    chdir($tmp);
    system("tar czvf ../$name *"); 
    # system("rm -rf $tmp");

}

sub copy_rpms
{
	my $cwd = shift;
	my $update = shift;
	my $rpm_dest;
	($update) ?
		($rpm_dest = $tmp."/".$update."/RPMS") :
		($rpm_dest = $tmp."/RPMS");

	open(PACK, "<$packList") || die "Cannot open $packList: $!\n";
    while (<PACK>) {
		chomp;
		next unless(/^(RPM:\s+)(.*)$/);
		my $rpm = $2;
		if ($rpm =~ /(^\d+)(.*)/) {
			copy("$fargo/$rpm"," $rpm_dest/$2");
		} else { copy("$fargo/$rpm", $rpm_dest); }
	}
	close(PACK);
}

sub copy_scripts
{
	my $cwd = shift;
	my $update = shift;
	
	my $script_dest;
	($update) ?
		($script_dest = $tmp."/".$update) :
		($script_dest = $tmp);

	open(LS, "/bin/ls $cwd |") || die "Cannot run ls on $cwd: $!\n";
	while(my $file = <LS>) {
		chomp($file);
		next if($exclude->{$file});
		copy("$cwd/$file", $script_dest);
	}
	close(LS);
}

sub buildLocale
{
	foreach my $lang (keys %$locales) {
		my $curLoc = $path.'/pkginfo/locale/'.$lang;
		next unless(-d $curLoc);
		mkdir("$localeDir/$lang", 0755);
		open(LS, "/bin/ls $curLoc |") || die "Cannot run ls on $curLoc: $!\n";
		while(my $po = <LS>) {
			chomp($po);
			next unless($po =~ /(\S+)(\.po)$/);
			`$msgFmt $curLoc/$po -o $localeDir/$lang/$1.mo`;		
		}
		close(LS);
	}

}


sub get_name
{
	open(PACK, "<$packList") || die "Cannot open $packList: $!\n";
	while (<PACK>) {
		chomp;
		if (/^(Location:\s+)(.*)$/) {
			$name = `basename $2`;
			chomp($name);
		}
	}
	close(PACK);
}

sub check_pieces
{

    # Make sure the important parts are there
    die "Cannot find packing_list: $packList" unless (-f $packList); 

	system("rm -rf $tmp") if(-d $tmp);

    mkdir($tmp, 0755);
    mkdir($rpmsDir, 0755);
	mkdir($pkgInfoDir, 0755);
	mkdir($localeDir, 0755);
	
    unless ($fargo) {
		$fargo = "/fargo/fargo/rpms" if (-d "/fargo/fargo/rpms");
		$fargo = "/mnt/fargo/rpms" if (-d "/mnt/fargo/rpms");
		$fargo = "/mnt/fargo/fargo/rpms" if (-d "/mnt/fargo/fargo/rpms");
	}
    unless (-d $fargo) {
		die "Bad Rpm directory: $fargo\n";
	}
}

sub printUsage
{
	print "Usage: $0 [options]\n\n";
    print " Creates a standard package file.\n\n";
    print "   -o	   Name where output package file \n";
    print "   -f	   Locatation of rpms\n";
    print "   -p       Directory of base CVS package\n";
    print "   -f	   Locatation of rpms\n";
    exit;
}

