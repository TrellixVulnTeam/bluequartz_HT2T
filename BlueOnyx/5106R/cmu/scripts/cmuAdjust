#!/usr/bin/perl
# $Id: cmuAdjust 922 2003-07-17 15:22:40Z will $
# Cobalt Networks, Inc http://www.cobalt.com
# Copyright 2001 Sun Microsystems, Inc.  All rights reserved.
use strict;

use lib "/usr/cmu/perl";

require CmuCfg;
my $cfg = CmuCfg->new(type => 'adjust');
$cfg->readConf();
$cfg->parseOpts();

$| = 1;

use IPC::Open3;
use Global;
use TreeXml;

my $build = Global::getBuild();
if(defined $validImport->{$build}) {
	$cfg->putGlb('currentOS', $build);	
} else { die "Cannot import on a $build\n" }

if($cfg->isDestDir) {
	$cfg->putDestDir(Global::parseD($cfg->destDir));
} else { 
	warn "ERROR Cannot find directory: ", $cfg->destDir, "\n";
	exit 1;
}
chdir $cfg->destDir || 
	die "Could not chdir to ", $cfg->destDir, ": $!\n";

if(!$cfg->isSess) { $cfg->putSess($$) }

my $origXml = $cfg->cmuXml;
my $sessXml = $cfg->sessXml;
if(-f $sessXml) {
	$origXml = $sessXml;
} else { qx/cp $origXml $sessXml/; }

if(!-f $origXml && !-f $sessXml) {
	die "Cannot find cmu.xml in ", $cfg->destDir, "\n";
}
my $migrate = TreeXml::readXml($origXml, 0);

if($cfg->isIpaddr) { $migrate = $cfg->convertIpaddr($migrate) }

my $iTree = {};
TreeXml::addNode('migrate', $migrate, $iTree);
TreeXml::writeXml($iTree, $sessXml);

my $cobaltBase = {};
my $appConf = $cfg->{appConf};
TreeXml::addNode('cobaltBase', $cfg->{glbConf}, $cobaltBase);


my ($pid, $adjustCmd);
if($migrate->{adjustPlatform} eq 'RaQXTR' && $build eq 'RaQ4') {
    # special case for the XTR thing back thing
    $adjustCmd = "/usr/cmu/scripts/RaQXTR4adjust.pl";
    if($pid = open3(*WR, *RE, *ER, $adjustCmd)) {
	print WR TreeXml::writeXml($cobaltBase);
	close(WR);
	close(RE);
	while(my $line = <ER>) { cmuLog("Adjust", $line); }
	close(ER);
	waitpid($pid, 0);
    }
    $migrate->{adjustPlatform} = $adjustPath{ $migrate->{adjustPlatform} };
} elsif($migrate->{adjustPlatform} ne $build) {
    while($migrate->{adjustPlatform} ne $build) {
	my $migrationPlatforms = "@{$adjustPath{ $migrate->{adjustPlatform}}}";
	if ( $migrationPlatforms =~ /$build/ ) {
	    $adjustCmd = "/usr/cmu/scripts/".$build."adjust.pl";
	    if($pid = open3(*WR, *RE, *ER, $adjustCmd)) {
		print WR TreeXml::writeXml($cobaltBase);
		close(WR);
		close(RE);
		while(my $line = <ER>) { cmuLog("Adjust", $line); }
		close(ER);
		waitpid($pid, 0);
	    }
	    $migrate->{adjustPlatform} = $adjustPath{ $migrate->{adjustPlatform} };
	}
    }
}
exit 0;

