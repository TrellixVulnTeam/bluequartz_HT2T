#!/bin/bash
# Copyright 2001 Sun Microsystems, Inc., All rights reserved.
#
# Sends all command-line arguments to the active monitor recipients.  This
# is useful because "nut", the UPS software's "NOTIFY" feature does just
# this on EXEC events.

CONFIG="/etc/sysconfig/ups"
SWATCHCONF="/etc/swatch.conf"

# Get the $STATE and $WAKESLAVES settings
. $CONFIG

# Send an email to all active monitor recipients letting them know
# about the situation.
if [ -f $SWATCHCONF ]; then
	LIST=`grep email_list $SWATCHCONF | sed 's/email_list = //'`
	
	if [ "$LIST" != "" ]; then
		if [ -x /usr/sausalito/bin/i18nmail.pl ]; then
			MAILPROG="/usr/sausalito/bin/i18nmail.pl"
			
			# Translate for i18n purposes.  Sorry, this is ugly.
			TEXT=`echo $* | sed \
	-e 's/UPS is back online/emailONLINE/' \
	-e 's/UPS is on battery and has a low battery/emailLOWBATT/' \
	-e 's/UPS is on battery/emailONBATT/'  \
	-e 's/UPS is being shutdown by the master/emailFSD/' \
	-e 's/Communications established with the UPS/emailCOMMOK/' \
	-e 's/Communications lost to the UPS/emailCOMMBAD/' \
	-e 's/The system is being shutdown/emailSHUTDOWN/' \
	-e 's/The UPS battery is bad and needs to be replaced/emailREPLBATT/' \
	-e 's/A UPS cannot be contacted for monitoring/emailNOCOMM/' \
	-e 's/This system is being shut down./emailGOINGDOWN/'`

			$MAILPROG -s "[[base-ups.emailSUBJECT]]" $LIST << EOF
`date` - [[base-ups.emailSTATUSCHANGE]]

[[base-ups.$TEXT]]
EOF
		else	# If we can't find "i18nmail.pl", fall back.
			/bin/mail $LIST -s "UPS STATE CHANGE" << EOF
`date` - UPS status has changed:

$*
EOF
		fi
	fi
fi

