<?php
// $Id: 50_PHP.php.create.Vsite
// Copyright (c) 2015 Michael Stauber, SOLARSPEED.NET
// Copyright (c) 2015 Team BlueOnyx, BLUEONYX.IT
//
// ui extension to set settings for php Vsite creation

if(defined("PHP_EXTENSION_CREATE_VSITE"))
{
    return 1;
}
define("PHP_EXTENSION_CREATE_VSITE", 1);

include_once("UIExtension.php");

class PHPExtension extends UIExtension
{
    function display(&$helper, &$container, &$cce_info)
    {
        $factory =& $helper->getHtmlComponentFactory("base-apache");
        $cce =& $helper->getCceClient();
    
        $defaults = $cce->get($cce_info["CCE_SERVICES_OID"], "PHP");
        
        // only add page if not already there
        if ($cce_info['CAN_ADD_PAGE'])
        {
            $pageId = 'webScripting';
            if (!in_array('webScripting', $container->getPageIds()))
            {
                $container->addPage("webScripting", 
                        $factory->getLabel("webScripting"));
            }
        }
        else
        {
            $pageId = $cce_info['PAGED_BLOCK_DEFAULT_PAGE'];
        }

        // Known PHP versions:
        $known_php_versions = array(
                                'PHP53' => '5.3',
                                'PHP54' => '5.4',
                                'PHP55' => '5.5',
                                'PHP56' => '5.6'
                                );

        // Get main "PHP" Object:
        $Master_PHP = $cce->getObject("PHP");

        $all_php_versions = array('PHPOS' => $Master_PHP['PHP_version_os']);

        foreach ($known_php_versions as $NSkey => $NSvalue) {
            $extraPHPs[$NSkey] = $cce->get($Master_PHP["OID"], $NSkey);
            if ($extraPHPs[$NSkey]['present'] != "1") {
                unset($extraPHPs[$NSkey]);
            }
        }

        $all_selectable_php_versions['PHPOS'] = $Master_PHP['PHP_version_os'];
        foreach ($extraPHPs as $NSkey => $NSvalue) {
            if ($NSvalue['present'] == '1') {
                $all_php_versions[$NSvalue['NAMESPACE']] = $NSvalue['version'];
                $all_php_versions_reverse[$NSvalue['version']] = $NSvalue['NAMESPACE'];
                if ($NSvalue['enabled'] == '1') {
                    $all_selectable_php_versions[$NSvalue['NAMESPACE']] = $NSvalue['version'];
                }
            }
        }

        //    [enabled] => 1
        //    [mod_ruid_enabled] => 0
        //    [suPHP_enabled] => 1
        //    [fpm_enabled] => 0

        if (($defaults['enabled'] == "1") && ($defaults['mod_ruid_enabled'] == "0") && ($defaults['suPHP_enabled'] == "0") && ($defaults['fpm_enabled'] == "0")) { 
            $php_enabler = array("disabled" => "0", "php" => "1", "enableModRUID" => "0", "enableSuPHP" => "0", "enableModFPM" => "0"); 
        }
        elseif (($defaults['enabled'] == "1") && ($defaults['mod_ruid_enabled'] == "0") && ($defaults['suPHP_enabled'] == "1") && ($defaults['fpm_enabled'] == "0")) { 
            $php_enabler = array("disabled" => "0", "php" => "0", "enableModRUID" => "0", "enableSuPHP" => "1", "enableModFPM" => "0"); 
        }
        elseif (($defaults['enabled'] == "1") && ($defaults['mod_ruid_enabled'] == "1") && ($defaults['suPHP_enabled'] == "0") && ($defaults['fpm_enabled'] == "0")) { 
            $php_enabler = array("disabled" => "0", "php" => "0", "enableModRUID" => "1", "enableSuPHP" => "0", "enableModFPM" => "0"); 
        }
        elseif (($defaults['enabled'] == "1") && ($defaults['mod_ruid_enabled'] == "0") && ($defaults['suPHP_enabled'] == "0") && ($defaults['fpm_enabled'] == "1")) { 
            $php_enabler = array("disabled" => "0", "php" => "0", "enableModRUID" => "0", "enableSuPHP" => "0", "enableModFPM" => "1"); 
        }
        else {
            $php_enabler = array("disabled" => "1", "php" => "0", "enableModRUID" => "0", "enableSuPHP" => "0", "enableModFPM" => "0"); 
        }

        //
        //-- Reseller: Can the reseller that owns this Vsite modify this?
        //
        $VsiteOwnerObj = $cce->get($cce->whoami());
        if ($VsiteOwnerObj['name'] != "admin") {
            $resellerCaps = $cce->scalar_to_array($VsiteOwnerObj['capabilities']);
            if (!in_array('resellerPHP', $resellerCaps)) {
                unset($php_enabler['php']);
            }
            if (!in_array('resellerRUID', $resellerCaps)) {
                unset($php_enabler['enableModRUID']);
            }
            if (!in_array('resellerSUPHP', $resellerCaps)) {
                unset($php_enabler['enableSuPHP']);
            }
            if (!in_array('resellerFPM', $resellerCaps)) {
                unset($php_enabler['enableModFPM']);
            }
        }

        // Walk through the array and make sure that at least one option is set:
        foreach ($php_enabler as $key => $value) {
            if (($key = array_search('1', $php_enabler)) === false) {
                $php_enabler['disabled'] = "1";
            }
        }
        //-- 

        $container->addFormField(
                $factory->getRadio("PHP_enabled", $php_enabler, "rw"),
                $factory->getLabel("PHP_enabled"),
                $pageId
                );

//print_rp($defaults);
//print_rp($php_enabler);


        $AKPE = array_keys($php_enabler);

        if (
            (($defaults['fpm_enabled'] == "1") || ($defaults['suPHP_enabled'] == "1")) || 
            ((!in_array('enabled', $AKPE)) && (!in_array('enableModRUID', $AKPE)) && ((in_array('enableSuPHP', $AKPE)) || (in_array('enableModFPM', $AKPE))))
            ) {
            $usedPHPversion = "";

            // Add a pulldown that allows to change the default PHP version of Apache to
            // one of the extra PHP versions:
            $PHP_version_Field_select = $factory->getMultiChoice("PHP_version_Field", array_values($all_selectable_php_versions));
            if (!isset($defaults['version'])) {
                $defaults['version'] = 'PHPOS';
            }
            if (isset($defaults['version'])) {
                if ($defaults['version'] == '') {
                    $defaults['version'] = 'PHPOS';
                }
            }
            $PHP_version_Field_select->setSelected($all_php_versions[$defaults['version']], true);
            $container->addFormField($PHP_version_Field_select, $factory->getLabel("PHP_version_Field"), $pageId);

        }
        else {
            $usedPHPversion = $Master_PHP['PHP_version'];
            // PHP_version being used by this Vsite:
            $PHP_version_Field = $factory->getTextField("PHP_version", $usedPHPversion, "r");
            $PHP_version_Field->setOptional ('silent');
            $container->addFormField(
                $PHP_version_Field,
                $factory->getLabel("PHP_version"),
                $pageId
            );
        }

    }

    function handle(&$helper, &$errors, &$cce_info, &$attributes)
    {
        $this->attributes = $attributes;

        $cce =& $helper->getCceClient();

        // Known PHP versions:
        $known_php_versions = array(
                                'PHP53' => '5.3',
                                'PHP54' => '5.4',
                                'PHP55' => '5.5',
                                'PHP56' => '5.6'
                                );

        // Get main "PHP" Object:
        $Master_PHP = $cce->getObject("PHP");

        $all_php_versions = array('PHPOS' => $Master_PHP['PHP_version_os']);

        foreach ($known_php_versions as $NSkey => $NSvalue) {
            $extraPHPs[$NSkey] = $cce->get($Master_PHP["OID"], $NSkey);
            if ($extraPHPs[$NSkey]['present'] != "1") {
                unset($extraPHPs[$NSkey]);
            }
        }

        $all_selectable_php_versions['PHPOS'] = $Master_PHP['PHP_version_os'];
        $all_php_versions_reverse[$Master_PHP['PHP_version_os']] = 'PHPOS';
        foreach ($extraPHPs as $NSkey => $NSvalue) {
            if ($NSvalue['present'] == '1') {
                $all_php_versions[$NSvalue['NAMESPACE']] = $NSvalue['version'];
                $all_php_versions_reverse[$NSvalue['version']] = $NSvalue['NAMESPACE'];
                if ($NSvalue['enabled'] == '1') {
                    $all_selectable_php_versions[$NSvalue['NAMESPACE']] = $NSvalue['version'];
                }
            }
        }

        // Note the double check. On additional form submit after an error radio settings
        // can change from "value" to "&value&" due to serialization. So we check for both:

        if (($this->attributes['PHP_enabled'] == "php") || ($this->attributes['PHP_enabled'] == "&php&")) {
          $php_params = array( 
                        'enabled' => "1", 
                        'mod_ruid_enabled' => "0",
                        'suPHP_enabled' => "0",
                        'fpm_enabled' => "0"
                    );
        }
        elseif (($this->attributes['PHP_enabled'] == "enableModRUID") || ($this->attributes['PHP_enabled'] == "&enableModRUID&")) {
          $php_params = array( 
                        'enabled' => "1", 
                        'mod_ruid_enabled' => "1",
                        'suPHP_enabled' => "0",
                        'fpm_enabled' => "0"
                    );
        }
        elseif (($this->attributes['PHP_enabled'] == "enableSuPHP") || ($this->attributes['PHP_enabled'] == "&enableSuPHP&")) {
          $php_params = array( 
                        'enabled' => "1", 
                        'mod_ruid_enabled' => "0",
                        'suPHP_enabled' => "1",
                        'fpm_enabled' => "0"
                    );
        }
        elseif (($this->attributes['PHP_enabled'] == "enableModFPM") || ($this->attributes['PHP_enabled'] == "&enableModFPM&")) {
          $php_params = array( 
                        'enabled' => "1", 
                        'mod_ruid_enabled' => "0",
                        'suPHP_enabled' => "0",
                        'fpm_enabled' => "1"
                    );
        }
        else {
          $php_params = array( 
                        'enabled' => "0", 
                        'mod_ruid_enabled' => "0",
                        'suPHP_enabled' => "0",
                        'fpm_enabled' => "0"
                    );
        }

        // Handle change of PHP version:
        if (isset($this->attributes['PHP_version_Field'])) {
            // Result from pulldown. We are allowed to change the version.
            $php_params['version'] = $all_php_versions_reverse[$this->attributes['PHP_version_Field']];
            
        }
        if (isset($this->attributes['PHP_version'])) {
            // Result from TextField. We are NOT allowed to change the version and use
            // the one that Apache is using:
            $php_params['version'] = $all_php_versions_reverse[$Master_PHP['PHP_version']];
        }

        if (($php_params['fpm_enabled'] == "0") && ($php_params['suPHP_enabled'] == "0")) {
            $php_params['version'] = $all_php_versions_reverse[$Master_PHP['PHP_version']];
        }

        $cce->set($cce_info["CCE_OID"], 'PHP', $php_params); 

        if (($php_params['suPHP_enabled'] == "1") || ($php_params['fpm_enabled'] == "1")) {
            // Disable UserWebs if suPHP or PHP-FPM is activated
            $cce->set($cce_info["CCE_OID"], 'USERWEBS', array('enabled' => "0"));
        }

        $errors = array_merge($errors, $cce->errors());
    }
}
?>