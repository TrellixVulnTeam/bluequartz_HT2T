<!--
    $Id: system.schema
    Copyright 2001 Sun Microsystems, Inc.  All rights reserved.
    
    This is the schema for the system object.  Moved here
    from sauce-basic.
-->

<typedef name="HTTP_Access_Type"  type="re"
  data = "^(BOTH|HTTP|HTTPS)$"
/>

<typedef name="IP_Protocol_Type"  type="re"
  data = "^(IPv4|IPv6|BOTH|VZv4|VZv6|VZBOTH)$"
/>

<!-------------------------------------------------------------------------
  SYSTEM 
    Stores all system-wide configuration settings.  There should be
    exactly one System object at all times.
-------------------------------------------------------------------------->

<class name="System" namespace="" version="1.2">
    <!-- name of the product --> 
    <property 
        name="productName" type="scalar" 
        writeacl="ruleCapable(adminUser)" readacl="ruleAll"
    />
    
    <!-- useful system identification properties -->
    <property 
        name="productIdentity" type="scalar" 
        writeacl="ruleCapable(adminUser)" readacl="ruleAll"
    />
    <property 
        name="productBuild" type="scalar" 
        writeacl="ruleCapable(adminUser)" readacl="ruleAll"
    />
    <property 
        name="productLanguage" type="scalar" 
        writeacl="ruleCapable(adminUser)" readacl="ruleAll"
    />
    <property 
        name="productVendor" type="scalar" 
        writeacl="ruleCapable(adminUser)" readacl="ruleAll" 
    />
    <property 
        name="productBuildString" type="scalar" 
        writeacl="ruleCapable(adminUser)" readacl="ruleAll" 
    />

    <!-- hardware serial number of the product -->
    <property name="serialNumber" type="scalar" 
        writeacl="ruleCapable(adminUser)" readacl="ruleAll" 
    />

    <!-- serial number of the product (as seen on the sticker on the box) -->
    <property name="productSerialNumber" type="scalar" />
  
    <!-- has the user sent in a electronic registration -->
    <property 
        name="isRegistered" type="boolean" default="0"
        writeacl="ruleCapable(adminUser)" 
    />
    
    <!-- has the user accepted the license agreement -->
    <property 
        name="isLicenseAccepted" type="boolean" default="0"
        writeacl="ruleCapable(adminUser)" readacl="ruleAll"
    />
    
    <!-- hostname: first half of FQDN -->
    <property 
        name="hostname" type="hostname" default="localhost"
        writeacl="ruleCapable(adminUser)" readacl="ruleAll"
    />

    <!-- domainname: second half of FQDN -->
    <property 
        name="domainname" type="domainname"
        writeacl="ruleCapable(adminUser)" readacl="ruleAll"
    />
    
    <!-- IPv4 ip address of the default gateway -->
    <property 
        name="gateway" type="ipaddr" optional="true"
        writeacl="ruleCapable(adminUser)"
    />

    <!-- IPv6 ip address of the default gateway -->
    <property 
        name="gateway_IPv6" type="ipaddrIPv6" optional="true"
        writeacl="ruleCapable(adminUser)"
    />

    <!-- Trigger for handler base/system/modsystem.pl -->
    <property 
        name="nw_update" type="scalar" optional="true" default="0" 
        writeacl="ruleCapable(adminUser)"
    />

    <!-- an array of DNS server IP addresses -->
    <property 
        name="dns" type="scalar" array="yes"
        writeacl="ruleCapable(adminUser)"
    />

    <!-- enable or disable the system console -->
    <property name="console" type="boolean" default="0"/>

    <!-- an array of locale strings the system supports -->
    <property 
        name="locales" type="scalar" default="&amp;en&amp;" array="yes"
        writeacl="ruleCapable(adminUser)"
    />

    <!-- Defines if IPv4, IPv6 or both are enabled and configured. Defaults to IPv4: -->
    <property name="IPType" type="IP_Protocol_Type" default="IPv4" writeacl="ruleCapable(adminUser)" readacl="ruleAll" />

    <!-- an array of additional IPv4 IP addresses -->
    <property 
        name="extra_ipaddr" type="ipaddr" array="yes"
        writeacl="ruleCapable(adminUser)"
    />

    <!-- an array of additional IPv6 IP addresses -->
    <property 
        name="extra_ipaddr_IPv6" type="ipaddrIPv6" array="yes"
        writeacl="ruleCapable(adminUser)"
    />

    <!-- Define which protocols the GUI is available on and if we redirect to FQDN of server on access: -->
    <property name="GUIaccessType" type="HTTP_Access_Type" default="BOTH" writeacl="ruleCapable(adminUser)" readacl="ruleAll" />
    <property name="GUIredirects" type="boolean" default="0" writeacl="ruleCapable(adminUser)" readacl="ruleAll" />

</class>


