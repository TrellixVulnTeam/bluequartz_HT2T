#!/usr/bin/perl
# $Id: cmuAdjust 922 2003-07-17 15:22:40Z will $
# Cobalt Networks, Inc http://www.cobalt.com
# Copyright 2001 Sun Microsystems, Inc.  All rights reserved.
use strict;

use lib "/usr/cmu/perl";

require CmuCfg;
my $cfg = CmuCfg->new(type => 'adjust');
$cfg->readConf();
$cfg->parseOpts();

$| = 1;

use IPC::Open3;
use Global;
use TreeXml;

my $build = Global::getBuild();
if(defined $validImport->{$build}) {
    $cfg->putGlb('currentOS', $build);  
} else { die "Cannot import on a $build\n" }

if($cfg->isDestDir) {
    $cfg->putDestDir(Global::parseD($cfg->destDir));
} else { 
    warn "ERROR Cannot find directory: ", $cfg->destDir, "\n";
    exit 1;
}
chdir $cfg->destDir || 
    die "Could not chdir to ", $cfg->destDir, ": $!\n";

if(!$cfg->isSess) { $cfg->putSess($$) }

my $origXml = $cfg->cmuXml;
my $sessXml = $cfg->sessXml;
if(-f $sessXml) {
    $origXml = $sessXml;
} else { qx/cp $origXml $sessXml/; }

if(!-f $origXml && !-f $sessXml) {
    die "Cannot find cmu.xml in ", $cfg->destDir, "\n";
}
my $migrate = TreeXml::readXml($origXml, 0);

if($cfg->isIpaddr) { $migrate = $cfg->convertIpaddr($migrate) }

my $iTree = {};
TreeXml::addNode('migrate', $migrate, $iTree);
TreeXml::writeXml($iTree, $sessXml);

my $cobaltBase = {};
my $appConf = $cfg->{appConf};
TreeXml::addNode('cobaltBase', $cfg->{glbConf}, $cobaltBase);


my ($pid, $adjustCmd);
if($migrate->{adjustPlatform} eq 'RaQXTR' && $build eq 'RaQ4') {
    # special case for the XTR thing back thing
    $adjustCmd = "/usr/cmu/scripts/RaQXTR4adjust.pl";
    if($pid = open3(*WR, *RE, *ER, $adjustCmd)) {
        print WR TreeXml::writeXml($cobaltBase);
        close(WR);
        close(RE);
        while(my $line = <ER>) { cmuLog("Adjust", $line); }
        close(ER);
        waitpid($pid, 0);
    }
    $migrate->{adjustPlatform} = $adjustPath{ $migrate->{adjustPlatform} };
}
elsif($migrate->{adjustPlatform} ne $build) {
    while($migrate->{adjustPlatform} ne $build) {
        $adjustCmd = "/usr/cmu/scripts/".
        $adjustPath{ $migrate->{adjustPlatform} }."adjust.pl";
        if($pid = open3(*WR, *RE, *ER, $adjustCmd)) {
            print WR TreeXml::writeXml($cobaltBase);
            close(WR);
            close(RE);
            while(my $line = <ER>) { cmuLog("Adjust", $line); }
            close(ER);
            waitpid($pid, 0);
        }
        $migrate->{adjustPlatform} = $adjustPath{ $migrate->{adjustPlatform} };
    }
}

exit 0;

# 
# Copyright (c) 2016 Michael Stauber, SOLARSPEED.NET
# Copyright (c) 2016 Team BlueOnyx, BLUEONYX.IT
# Copyright (c) 2003 Sun Microsystems, Inc. 
# All Rights Reserved.
# 
# 1. Redistributions of source code must retain the above copyright 
#     notice, this list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright 
#     notice, this list of conditions and the following disclaimer in 
#     the documentation and/or other materials provided with the 
#     distribution.
# 
# 3. Neither the name of the copyright holder nor the names of its 
#     contributors may be used to endorse or promote products derived 
#     from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN 
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
# POSSIBILITY OF SUCH DAMAGE.
# 
# You acknowledge that this software is not designed or intended for 
# use in the design, construction, operation or maintenance of any 
# nuclear facility.
# 