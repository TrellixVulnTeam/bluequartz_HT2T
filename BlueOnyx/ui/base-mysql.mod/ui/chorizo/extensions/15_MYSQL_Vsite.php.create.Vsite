<?php
// $Id: 06_MYSQL_Vsite.php.create.Vsite
//
// Copyright (c) 2014 Michael Stauber, SOLARSPEED.NET
// Copyright (c) 2014 Team BlueOnyx, BLUEONYX.IT
//

include_once('UIExtension.php');
include_once("ServerScriptHelper.php");

if(defined("MYSQL_Vsite_EXTENSION_CREATE_VSITE"))
{
	return 1;
}
define("MYSQL_Vsite_EXTENSION_CREATE_VSITE", 1);

class MYSQL_VsiteExtension extends UIExtension {
	function display(&$ServerScriptHelper, &$container, $parameters) {
		global $group;
		$mysql_error = "";
		$ret = ini_set("display_errors", "Off");

		$factory = $ServerScriptHelper->getHtmlComponentFactory("base-mysql");
		$cce = $ServerScriptHelper->getCceClient();

		$db_rights = $cce->getObject("System", array(), "MYSQLUSERS_DEFAULTS");

		// will assume the container is a PagedBlock for the time being
		$page_id = $parameters['PAGED_BLOCK_DEFAULT_PAGE'];

		$featureMYSQL_Vsite = $cce->get($parameters['CCE_SERVICES_OID'], 'MYSQL_Vsite');

		// Find and validate presence of 'MySQL' and pull the data:
		$getthisOID = $cce->find("MySQL");
		$mysql_settings_exists = 0;
		$mysql_settings = $cce->get($getthisOID[0]);

		// MySQL settings:
		$sql_root				= $mysql_settings['sql_root'];
		$sql_rootpassword		= $mysql_settings['sql_rootpassword'];
		$solmysql_host			= $mysql_settings['sql_host'];
		$solmysql_Port			= $mysql_settings['sql_port'];
		
		// Configure defaults:
		if (!$sql_root) { $sql_root = "root"; }
		if (!$solmysql_host) { $solmysql_host = "localhost"; }
		if (!$solmysql_Port) { $solmysql_Port = "3306"; }

		if (($solmysql_host != "localhost") || ($solmysql_host != "127.0.0.1")) {
				$my_sql_host = $solmysql_host . ":" . $solmysql_Port;
				$con_sql_host = $my_sql_host;
		}

		// Get FQDN of the server:
		$getthisFQDN = $cce->find("System");
		$this_FQDN_info = $cce->get($getthisFQDN[0]);
		$this_host = $this_FQDN_info['hostname'];
		$this_domain = $this_FQDN_info['domainname'];
		$this_FQDN = $this_host . "." . $this_domain;
		
		// Test MySQL connection: (1 = OK, 0 = not OK)
		$mysql_link = @mysql_connect($con_sql_host, $sql_root, $sql_rootpassword) or $mysql_error = mysql_error();
		@mysql_select_db("mysql") or $mysql_error = mysql_error();
		@mysql_close($mysql_link);
		if ($mysql_error != "") {
				$mysql_status = "0";
		}
		else {
				$mysql_status = "1";
		}
	
		if (isset($parameters['IS_SITE_ADMIN'])) {
			if ( $featureMYSQL_Vsite['enabled'] ) {
						$solmysqlField =& $factory->getMultiChoice('solmysql_enabled');
						$enable =& $factory->getOption('solmysql', $featureMYSQL_Vsite['enabled'], 'r');
						$enable->setLabel($factory->getLabel('enable', false));
						$solmysqlField->addOption($enable);
			
						$solmysqlUsername = $factory->getTextField('solmysql_username', $featureMYSQL_Vsite['username'], 'r');
						$solmysqlUsername->setMaxLength("16");
						$solmysqlUsername->setOptional(FALSE);
						$solmysqlUsername->setPreserveData(false);
						$enable->addFormField($solmysqlUsername, $factory->getLabel('solmysqlUsername'));

						$solmysqlPass = $factory->getTextField('solmysql_pass', $featureMYSQL_Vsite['pass'], 'r');
						$solmysqlPass->setOptional(false);
						$solmysqlPass->setPreserveData(false);
						$enable->addFormField($solmysqlPass, $factory->getLabel('solmysqlPass'));

						$solmysqlDB = $factory->getTextField('solmysql_DB', $featureMYSQL_Vsite['DB'], 'r');
						$solmysqlDB->setMaxLength("16");
						$solmysqlDB->setOptional(false);
						$solmysqlDB->setPreserveData(false);
						$enable->addFormField($solmysqlDB, $factory->getLabel('solmysqlDB'));

						$solmysqlHost = $factory->getTextField('solmysql_host', $solmysql_host, 'r');
						$solmysqlHost->setOptional(false);
						$solmysqlHost->setPreserveData(false);
						$enable->addFormField($solmysqlHost, $factory->getLabel('solmysqlHost'));

						$solmysqlPort = $factory->getTextField('solmysql_Port', $solmysql_Port, 'r');
						$solmysqlPort->setOptional(false);
						$solmysqlPort->setPreserveData(false);
						$solmysqlPort->setType('number');
						$enable->addFormField($solmysqlPort, $factory->getLabel('solmysqlPort'));

						// Hidden field for FQDN:
						$container->addFormField(
										$factory->getTextField('this_FQDN', $this_FQDN, 'r'),
										$factory->getLabel('this_FQDN'), "hidden"
									);

						$container->addFormField($solmysqlField, $factory->getLabel('solmysqlFullText'), $page_id);
			}

		}
		else {
			
			if ($mysql_status == "1") {
			// MySQL status is OK:
			
			if ( $featureMYSQL_Vsite['enabled'] ) {
				$prot = 'r';
				$protdel = 'rw';
			}
			else {
				$prot = 'rw';			
				$protdel = 'r';
			}

			if ( !$featureMYSQL_Vsite['enabled'] ) {
				// Feature not active, generate username, password and DBname:
				// Resolve which site this is for:
				$vsite = $cce->getObject('Vsite', array('name' => $group));
				$vs_site = $vsite["hostname"] . '.' . $vsite["domain"];
				$my_username = "vsite_" . createRandomPassword('7');
				$my_dbname =  $my_username . '_db';
				$my_random_password = createRandomPassword();

			}
			else {
				// Feature enabled already, read saved values from CCE:
				if (isset($featureMYSQL_Vsite['username'])) {
				  $my_username = $featureMYSQL_Vsite['username'];
				}
				else {
				  $my_username = "";
				}
				if (isset($featureMYSQL_Vsite['pass'])) {
				  $my_random_password = $featureMYSQL_Vsite['pass'];
				}
				else {
				  $my_random_password = "";
				}
				if (isset($featureMYSQL_Vsite['DB'])) {
				  $my_dbname = $featureMYSQL_Vsite['DB'];
				}
				else {
				  $my_dbname = "";
				}
			}

			//
			//-- Reseller: Can the reseller that owns this Vsite modify this?
			//
			$VsiteOwnerObj = $cce->get($cce->whoami());
			$access = "rw";
			if ($VsiteOwnerObj['name'] != "admin") {
				$resellerCaps = $cce->scalar_to_array($VsiteOwnerObj['capabilities']);
				if (!in_array('resellerMySQL', $resellerCaps)) {
					$featureMYSQL_Vsite['enabled'] = '0';
					$access = "r";
				}
			}

			//-- 

			$solmysqlField =& $factory->getMultiChoice('solmysql_enabled');
			$enable =& $factory->getOption('solmysql', $featureMYSQL_Vsite['enabled'], $access);
			$enable->setLabel($factory->getLabel('enable', false));
			$solmysqlField->addOption($enable);

			$solmysqlUsername = $factory->getTextField('solmysql_username', $my_username, $prot);
			$solmysqlUsername->setMaxLength("16");
			$solmysqlUsername->setOptional(FALSE);
			$solmysqlUsername->setPreserveData(false);
			$enable->addFormField($solmysqlUsername, $factory->getLabel('solmysqlUsername'));

			$solmysqlPass = $factory->getTextField('solmysql_pass', $my_random_password, $prot);
			$solmysqlPass->setOptional(FALSE);
			$solmysqlPass->setPreserveData(false);
			$enable->addFormField($solmysqlPass, $factory->getLabel('solmysqlPass'));

			$solmysqlDB = $factory->getTextField('solmysql_DB', $my_dbname, $prot);
			$solmysqlDB->setMaxLength("16");
			$solmysqlDB->setOptional(FALSE);
			$solmysqlDB->setPreserveData(false);
			$enable->addFormField($solmysqlDB, $factory->getLabel('solmysqlDB'));

			$solmysqlHost = $factory->getTextField('solmysql_host', $solmysql_host, 'r');
			$solmysqlHost->setOptional(FALSE);
			$solmysqlHost->setPreserveData(false);
			$enable->addFormField($solmysqlHost, $factory->getLabel('solmysqlHost'));

			$solmysqlPort = $factory->getTextField('solmysql_Port', $solmysql_Port, 'r');
			$solmysqlPort->setOptional(false);
			$solmysqlPort->setPreserveData(false);
			$solmysqlPort->setType('number');
			$enable->addFormField($solmysqlPort, $factory->getLabel('solmysqlPort'));

			$container->addFormField($solmysqlField, $factory->getLabel('solmysqlFullText'), $page_id);

			// Hidden field for previous status:
			if (!isset($featureMYSQL_Vsite['hidden'])) {
				$hidden_feature = "";
			}
			else {
				$hidden_feature = $featureMYSQL_Vsite['hidden'];
			}

						$container->addFormField(
										$factory->getTextField('solmysql_Hidden', $hidden_feature, 'r'),
										$factory->getLabel('solmysql_Hidden'), "hidden"
										);

						// Hidden field for FQDN:
						$container->addFormField(
										$factory->getTextField('this_FQDN', $this_FQDN, 'r'),
										$factory->getLabel('this_FQDN'), "hidden"
									);
			
			}
			else {
						// MySQL status is not OK:
						$solmysqlField =& $factory->getMultiChoice('solmysql_enabled');
						$enable =& $factory->getOption('solmysql', $featureMYSQL_Vsite['enabled'], 'rw');
						$enable->setLabel($factory->getLabel('enable', false));
						$solmysqlField->addOption($enable);

						// Bloody fracking hell! To get the MySQL error message localized we need to jump
						// through so many loop-holes that it's no longer funny!
						$CI =& get_instance();
						$loginName = $CI->input->cookie('loginName');
						$user = $cce->getObject("User", array("name" => $loginName));
						$i18n = new I18n("base-mysql", $user['localePreference']);
						$sql_Status = $i18n->get("[[base-mysql.sqlstatus_fail]]");

						$solmysqlStatus = $factory->getTextField('sql_status', $sql_Status, 'r');
						$solmysqlStatus->setOptional(false);
						$solmysqlStatus->setPreserveData(false);
						$enable->addFormField($solmysqlStatus, $factory->getLabel('sql_status'));

						$container->addFormField($solmysqlField, $factory->getLabel('solmysqlFullText'), $page_id);
			}
		}
	}

	function handle(&$ServerScriptHelper, &$errors, $parameters, &$attributes) {

		// [solmysql_enabled] => on 			<-- Enabled on Vsite create. On Vsite edit it's 'solmysql' instead.
		// [solmysql_username] => test_admin
		// [solmysql_pass] => SGcngEKK
		// [solmysql_DB] => test_site_db
		// [solmysql_host] => localhost
		// [solmysql_Port] => 3306

		// Get POST attributes:
		$this->attributes = $attributes;

		// Start sane with MySQL off:
		$solmysql = "0";

		// Find out if MySQL should be enabled:
		if (isset($this->attributes['solmysql_enabled'])) {
			if ($this->attributes['solmysql_enabled'] == "1") {
				// MySQL is enabled.
				$solmysql = "1";
			}
		}

		// Hate to do it, but we have to sort the params one by one:
		$solmysql_Status = "";
		if (isset($this->attributes['solmysql_Status'])) {
			$solmysql_Status = $this->attributes['solmysql_Status'];
		}

		$solmysql_username = "";
		if (isset($this->attributes['solmysql_username'])) {
			$solmysql_username = $this->attributes['solmysql_username'];
		}

		$solmysql_pass = "";
		if (isset($this->attributes['solmysql_pass'])) {
			$solmysql_pass = $this->attributes['solmysql_pass'];
		}

		$solmysql_DB = "";
		if (isset($this->attributes['solmysql_DB'])) {
			$solmysql_DB = $this->attributes['solmysql_DB'];
		}

		$solmysql_host = "localhost";
		if (isset($this->attributes['solmysql_host'])) {
			$solmysql_host = $this->attributes['solmysql_host'];
		}

		$solmysql_Port = "3306";
		if (isset($this->attributes['solmysql_Port'])) {
			$solmysql_Port = $this->attributes['solmysql_Port'];
		}

		// If we have 'group' set, then this is an existing Vsite and
		// not one that we're just creating:
		if (isset($this->attributes['group'])) {
			$fqdn = $this->attributes['hostName'] . "." . $this->attributes['domain'];
		}
		else {
			$cce = $ServerScriptHelper->getCceClient();
			$feature_site = $cce->get($parameters['CCE_OID']);
			$fqdn = $feature_site['fqdn'];
		}

		// Check CODB to see if we already have a 'MySQL_Vsite' object for this Vsite:
		$cce = $ServerScriptHelper->getCceClient();
		$featureMYSQL_Vsite = $cce->get($parameters['CCE_OID'], 'MYSQL_Vsite');
		$solmysqlExists_Status = $featureMYSQL_Vsite['enabled'];

		
		if ($solmysql_host != 'localhost') {
			$unmodified_sql_host = $fqdn;
		}
		else {
			$unmodified_sql_host = $solmysql_host;
		}

		if ($solmysql_Status == "") { // True on Vsite create
		
			if (($solmysqlExists_Status != $solmysql) && ($solmysql_username != "")) { 
				// Existing DB, but MySQL is off. Or MySQL is enabled and no existing DB.
				// Additionally: Username is blank if this is a Vsite create re-run.

				// Start - MySQL
				// End - MySQL
			}

			if ($solmysql == "1") {
				$action = 'create';
			}
			else {
				$action = 'destroy';
			}

			if (($solmysql_username != "") && ($solmysql_DB != "")) {
				// Create Vsite namespace 'MYSQL_Vsite':
				$cce = $ServerScriptHelper->getCceClient();
					$cce->set($parameters['CCE_OID'], 'MYSQL_Vsite', array(
									'enabled' => $solmysql, 
									'username' => $solmysql_username,
									'pass' => $solmysql_pass,
									'DB' => $solmysql_DB,
									'host' => $solmysql_host,
									'port' => $solmysql_Port,
									'hidden' => time(),
									$action => time()
									));
				$errors = array_merge($errors, $cce->errors());
			}
			$ret = ini_set("display_errors", "On");
		}
	}
}

?>