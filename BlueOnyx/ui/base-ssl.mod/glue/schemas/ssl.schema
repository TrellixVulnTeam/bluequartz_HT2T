<!--
    Copyright 2001 Sun Microsystems, Inc.  All rights reserved.
    $Id: ssl.schema,v 1.14.2.1 2002/02/05 21:21:54 pbaltz Exp $

    Schema for ssl stuff.
-->

<!-- ssl info for admin server -->
<class name="System" namespace="SSL" version="1.0">
    <property name="enabled" type="boolean" default="1"/>

    <!-- do we need the cert wizard for the admin server mgmt -->
    <property name="wizard" type="boolean" default="1"/>

    <!-- set to generate a self-signed certificate -->
    <property 
        name="createCert" type="scalar" optional="yes"
        writeacl="ruleCapable(adminUser)"
    />
    <!-- set to generate a certificate signing request -->
    <property
        name="createCsr" type="scalar" optional="yes"
        writeacl="ruleCapable(adminUser)"
    />

    <!-- set to suck in imported cert and possibly key -->
    <property
        name="importCert" type="scalar" optional="yes"
        writeacl="ruleCapable(adminUser)"
    />

    <!-- 
        number of days the cert is good for. this is optional for
        certs signed by a CA.  default to 9999 for the admin server.
    -->
    <property 
        name="daysValid" type="uint" optional="yes" default="9999"
        writeacl="ruleCapable(adminUser)"
    />

    <!--
        The following are the X.509 attributes.  All fields
        that are required by either Verisign or Thawte or both
        are not optional.  The common name field is taken to be
        the System's fqdn.
    -->
    <property 
        name="country" type="sslCountry"
        writeacl="ruleCapable(adminUser)"
    />
    <property 
        name="state" type="scalar" optional="yes"
        writeacl="ruleCapable(adminUser)"
    />
    <property 
        name="city" type="scalar"
        writeacl="ruleCapable(adminUser)"
    />
    <property 
        name="orgName" type="scalar"
        writeacl="ruleCapable(adminUser)"
    />
    <property 
        name="orgUnit" type="scalar" optional="yes"
        writeacl="ruleCapable(adminUser)"
    />
    <property 
        name="email" type="email_address" optional="yes"
        writeacl="ruleCapable(adminUser)"
    />
    <property 
        name="expires" type="scalar" optional="yes"
        writeacl="ruleCapable(adminUser)"
    />

    <!-- to allow adding and removing of ca certificates -->
    <property
        name="caCerts" type="scalar" array="yes" optional="yes"
        writeacl="ruleCapable(adminUser)"
    />
</class>

<class 
    name="VsiteServices" namespace="SSL" version="1.0"
>
    <property name="featureEnabled" type="boolean" default="1"/>

    <!-- i18n name for the ui to use -->
    <property
        name="i18nName" type="scalar" default="[[base-ssl.ssl]]"
    />

    <!-- default setting for Vsites being created -->
    <property 
        name="enabled" type="boolean" default="0"
        writeacl="ruleCapable(adminUser)"/>
</class>

<typedef 
    name="sslCountry" type="re" data="^[A-Z]{2}$"
    errmsg="[[base-ssl.country_invalid]]"
/>

<class 
    name="Vsite" namespace="SSL" version="1.0"
    createacl="ruleCapable(adminUser)" destroyacl="ruleCapable(adminUser)"
>
    <!-- 
        the enabled property determines whether this Vsite can use
        SSL or not.  If enabled is false the site admins won't even
        see the SSL menu item
    -->
    <property 
        name="enabled" type="boolean" default="0"
        writeacl="ruleCapable(adminUser)"
    />
    <property 
        name="wizard" type="boolean" default="1"
        writeacl="ruleCapable(adminUser) OR ( ruleCapable(siteAdmin) AND ruleSiteSSL )"
    />
    <property 
        name="createCert" type="scalar" optional="yes"
        writeacl="ruleCapable(adminUser) OR ( ruleCapable(siteAdmin) AND ruleSiteSSL )"
    />
    <!-- set to generate a certificate signing request -->
    <property
        name="createCsr" type="scalar" optional="yes"
        writeacl="ruleCapable(adminUser) OR (ruleCapable(siteAdmin) AND ruleSiteSSL)"
    />

    <!-- set to suck in imported cert and possibly key -->
    <property
        name="importCert" type="scalar" optional="yes"
        writeacl="ruleCapable(adminUser) OR (ruleCapable(siteAdmin) AND ruleSiteSSL)"
    />

    <!-- 
        number of days the cert is good for. this is optional for
        certs signed by a CA.  default to one year.
    -->
    <property 
        name="daysValid" type="uint" optional="yes" default="365"
        writeacl="ruleCapable(adminUser) OR ( ruleCapable(siteAdmin) AND ruleSiteSSL )"
    />

    <!--
        The following are the X.509 attributes.  All fields
        that are required by either Verisign or Thawte or both
        are not optional.  The common name field is taken to be
        the Vsite's fqdn.
    -->
    <property 
        name="country" type="sslCountry"
        writeacl="ruleCapable(adminUser) OR ( ruleCapable(siteAdmin) AND ruleSiteSSL )"
    />
    <property 
        name="state" type="scalar" optional="yes"
        writeacl="ruleCapable(adminUser) OR ( ruleCapable(siteAdmin) AND ruleSiteSSL )"
    />
    <property 
        name="city" type="scalar"
        writeacl="ruleCapable(adminUser) OR ( ruleCapable(siteAdmin) AND ruleSiteSSL )"
    />
    <property 
        name="orgName" type="scalar"
        writeacl="ruleCapable(adminUser) OR ( ruleCapable(siteAdmin) AND ruleSiteSSL )"
    />
    <property 
        name="orgUnit" type="scalar" optional="yes"
        writeacl="ruleCapable(adminUser) OR ( ruleCapable(siteAdmin) AND ruleSiteSSL )"
    />
    <property 
        name="email" type="email_address" optional="yes"
        writeacl="ruleCapable(adminUser) OR ( ruleCapable(siteAdmin) AND ruleSiteSSL )"
    />
    <property 
        name="expires" type="scalar" optional="yes"
        writeacl="ruleCapable(adminUser) OR ( ruleCapable(siteAdmin) AND ruleSiteSSL )"
    />

    <!-- to allow adding and removing of ca certificates -->
    <property
        name="caCerts" type="scalar" array="yes" optional="yes"
        writeacl="ruleCapable(adminUser) OR (ruleCapable(siteAdmin) AND ruleSiteSSL)"
    />
</class>

