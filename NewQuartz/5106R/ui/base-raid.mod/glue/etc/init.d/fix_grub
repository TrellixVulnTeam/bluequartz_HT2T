#!/bin/bash
#
# fix_grub:       Script for fixing grub for software raid which isn't well supported under CentOS4
#
# chkconfig: 1235 80 02
# description: script to apply cpu microcode
#


# Source function library.
. /etc/init.d/functions

start () {
    touch /var/lock/subsys/fix_grub
    /bin/true
    echo ""
}

stop() {
    if [ ! -f /boot/grub/grub.conf ];then
	echo "No grub here!"
	exit 0
    fi
    if [ ! -f /proc/mdstat ];then
	echo "No raid here!"
	exit 0
    fi
    echo "Rebuilding grub: "
    bootPartition=`df | grep "/boot" | awk -F " " '{ print $1}' |awk -F "/" '{ print $3}' `
    raidType=`cat /proc/mdstat | grep $bootPartition | grep raid | awk -F " " '{ print $4 }'`
    raidDisks=`mdadm --detail /dev/$bootPartition | grep "Raid Devices" | awk -F " " '{ print $4 }'`

    if [ "$raidType" ] ; then
	# echo "This is a raid-setup!"
	if [ "$raidDisks" == "4" ] ; then 
	# RAID5
	    # echo "We're running on a raid5 setup!"
	    grub --batch <<EOF
root (hd0,0)
setup (hd0)
root (hd1,0)
setup (hd1)
root (hd2,0)
setup (hd2)
root (hd3,0)
setup (hd3)
quit
EOF
	else
	# RAID1
	    # echo "We're running on a raid1 setup!"
	    grub --batch <<EOF
root (hd0,0)
setup (hd0)
root (hd1,0)
setup (hd1)
quit
EOF
	fi
	rm -f /var/lock/subsys/fix_grub
    else
	echo "No raid here!"
	echo -n ""
    fi
}

# See how we were called.
case "$1" in
    start)
      start
      ;;
    stop)
      stop
      ;;
    *)
      echo $"Usage: $0 {start|stop}"
      ;;
esac
exit $RETVAL


